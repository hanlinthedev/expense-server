// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  output   = "./generated/prisma"
}

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

model User {
  id             String     @id @default(uuid())
  email          String     @unique
  password       String
  name           String
  categories     Category[]
  expenses       Expense[]
  incomes        Income[]
  isEmailVerifed Boolean?   @default(false)
  emailVerified  DateTime?
  resetToken     String?
  resetTokenExp  DateTime?
  createdAt      DateTime   @default(now())
  updatedAt      DateTime   @updatedAt
}

model Expense {
  id          String    @id @default(uuid())
  amount      Float
  description String
  categoryId  String?
  category    Category? @relation(fields: [categoryId], references: [id], onDelete: SetNull)
  usedAt      DateTime
  userId      String
  user        User      @relation(fields: [userId], references: [id])
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt
}

model Income {
  id          String    @id @default(uuid())
  amount      Float
  description String
  categoryId  String?
  category    Category? @relation(fields: [categoryId], references: [id], onDelete: SetNull)
  receivedAt  DateTime
  userId      String
  user        User      @relation(fields: [userId], references: [id])
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt
}

model Category {
  id       String    @id @default(uuid())
  name     String
  userId   String
  color    String
  user     User      @relation(fields: [userId], references: [id])
  expenses Expense[]
  incomes  Income[]
}
